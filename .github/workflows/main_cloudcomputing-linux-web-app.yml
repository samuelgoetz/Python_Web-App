

name: Build and deploy Python app to Azure Web App - cloudcomputing-linux-web-app # WorkFlow Name 


# Bestimmt, wann der Workflow ausgelöst wird: bei Pushes auf den 'main' Branch und manuell über die Workflow-Dispatch-Funktion
on:
  push:
    branches:
      - main
  workflow_dispatch:

# Definiert den Build-Job, der auf der neuesten Ubuntu-Version ausgeführt wird
jobs:
  build:
    runs-on: ubuntu-latest
    

    # Die actions/checkout Aktion wird verwendet, um den Quellcode des GitHub-Repositories, in dem der Workflow definiert ist, 
    # auf die virtuelle Maschine zu klonen, auf der der Workflow läuft.
    steps:
      - uses: actions/checkout@v4
       
    # Richtet die Python-Version 3.9 ein
      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.9'
        

      - name: Run tests
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          python test_app.py


    # Packt das gesamte Verzeichnis in ein ZIP-Archiv für die Bereitstellung
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r
        
    # Lädt das ZIP-Archiv als Artefakt hoch, um es im Bereitstellungsjob zu verwenden. Die virtuelle Umgebung (venv) wird ausgeschlossen.
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip
            !venv/
        
  # Definiert den Bereitstellungsjob, der nach dem erfolgreichen Abschluss des Build-Jobs ausgeführt wird.
  # Er verwendet ebenfalls die neueste Ubuntu-Version und benötigt den Build-Job.
  # Setzt die Bereitstellungsumgebung auf 'Production' und erhält die URL der Web-App aus den Ausgabevariablen des Deploy-Schritts.
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
   

    # Lädt das zuvor hochgeladene Artefakt vom Build-Job herunter
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app
        

        # Entpackt das heruntergeladene ZIP-Archiv
      - name: Unzip artifact for deployment
        run: unzip release.zip
       

        # Verwendet die Azure Web Apps Deploy Action, um die App in die Azure Web App zu deployen.
        # Der App-Name ist 'cloudcomputing-linux-web-app', der Slot-Name ist 'Production'.
        # Das Publish-Profile wird aus den GitHub Secrets bezogen.
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'cloudcomputing-linux-web-app'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_346EBDF8A866459988FE5BF703AA57AB }}
      
